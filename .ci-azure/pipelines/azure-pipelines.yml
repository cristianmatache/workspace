trigger:
  branches:
    include:
      - '*'

schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  PY_VERSION: 3.8
  PY_ENV_PATH: $(Pipeline.Workspace)/.env
  REINSTALL_DEPS: true

stages:
  - stage: install_deps
    displayName: 'install deps'
    jobs:
      - job: install_python_deps
        steps:
          - template: ../templates/setup_py.yml
          - script: |
              PIP="pip install --upgrade -c 3rdparty/py-env-ws/constraints.txt -r 3rdparty/py-env-ws/requirements.txt \
                   -r 3rdparty/py-env-ws/dev-requirements.txt --target $(PY_ENV_PATH)"
              echo "> $PIP"
              eval $PIP
            displayName: pip install
            condition: or(eq(variables.CONDA_CACHE_RESTORED, 'false'), eq(variables.REINSTALL_DEPS, 'true'))

  - stage: lint
    displayName: 'lint'
    dependsOn: install_deps
    jobs:
      - job: lint_py
        steps:
          - template: ../templates/use_py_deps.yml
          - script: |
              which mypy
              which flake8
              which bandit
              which pylint
              which isort
              which docformatter
            displayName: 'Sanity check py tools'
          - script: make lint-py
            displayName: 'Type check and lint py'
      - job: lint_hs
        steps:
          - script: curl -sSL https://raw.github.com/ndmitchell/hlint/master/misc/run.sh | sh -s tutorials_hs/
            displayName: 'Run hlint'
      - job: lint_sh
        steps:
          - script: make lint-sh
            displayName: 'Run shellcheck'
      - job: lint_yaml
        steps:
          - script: make lint-yml
            displayName: 'Run yamllint'
      - job: lint_markdown
        steps:
          - script: make -j1 env-md lint-md
            displayName: 'Run markdownlint'

  - stage: test_py
    dependsOn: install_deps
    displayName: 'test'
    jobs:
      - job: test_py
        steps:
          - template: ../templates/use_py_deps.yml
          - script: |
              which pytest
            displayName: 'Sanity check pytest'

          - script: make test-py
            displayName: 'Test py'

  - stage: test_py
    dependsOn: []
    displayName: 'test'
    jobs:
      - job: test_py
        steps:
          - script: make -j1 env-sh test-sh
            displayName: 'Test sh'
