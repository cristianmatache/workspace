trigger:
  branches:
    include:
      - master
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  PY_VERSION: 3.8
  PY_ENV_PATH: $(Pipeline.Workspace)/.env
  REINSTALL_DEPS: 'true'

stages:
  - stage: install_deps
    displayName: 'install deps'
    jobs:
      - job: install_python_deps
        steps:
          - template: tasks_py_setup.yml
          - script: |
              PIP="pip install --upgrade -r dev_requirements.txt --target $(PY_ENV_PATH)"
              echo $PIP
              eval $PIP
            displayName: pip install
            condition: or(eq(variables.CONDA_CACHE_RESTORED, 'false'), eq(variables.REINSTALL_DEPS, 'true'))

  - stage: lint
    displayName: 'lint'
    jobs:
      - job: lint_py
        steps:
          - template: use_py_deps.yml
          - script: |
              which mypy
              which flake8
              which bandit
              which pylint
            displayName: 'Sanity check py linters'

          - script: make flake8
            displayName: 'Run flake8'

          - script: make mypy
            displayName: 'Run mypy'

          - script: make bandit
            displayName: 'Run bandit'

          - script: make pylint
            displayName: 'Run pylint'

  - stage: test
    displayName: 'test'
    jobs:
      - job: test_py
        steps:
          - template: use_py_deps.yml
          - script: |
              which pytest
            displayName: 'Sanity check py test'

          - script: pytest lib_py_utils/ --verbose
            displayName: 'Pytest lib_py_utils'
