trigger:
  branches:
    include:
      - master
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  CONDA_ENV: ws
  CONDA_HOME: /usr/share/miniconda/envs/$(CONDA_ENV)/

stages:
  - stage: pip_install
    displayName: 'pip install deps'

    jobs:
      - job: 'python'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'

          - script: which python
          - script: which pip
          - script: which conda

          - script: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add conda to PATH

          - task: Cache@2
            displayName: Use cached Anaconda environment
            inputs:
              key: conda | requirements.txt
              path: $(CONDA_HOME)
              cacheHitVar: CONDA_CACHE_RESTORED

          - script: |
              which conda
              which python
              which pip
              echo "Creating"
              conda create -n $(CONDA_ENV) python=3.8
              which python
              which pip
              pip install -r dev_requirements.txt
            displayName: Create Anaconda environment (if not restored from cache)
            condition: eq(variables.CONDA_CACHE_RESTORED, 'false')

          - script: |
              source activate $(CONDA_ENV)
              which mypy
            displayName: Run unit tests

          # - script: pip install -r dev_requirements.txt
          #   displayName: 'Install python dependencies'

          # - script: flake8 . --config=.ini-files/.flake8
          #   displayName: 'Run flake8'

          # - script: mypy app_iqor/ lib_py_utils/py_utils/ --config-file .ini-files/mypy.ini
          #   displayName: 'Run mypy'

          # - script: bandit -r . --configfile .ini-files/.bandit.yml
          #   displayName: 'Run bandit'

          # - script: pylint app_iqor/ lib_py_utils/py_utils/  --rcfile=.ini-files/.pylintrc
          #   displayName: 'Run pylint'
