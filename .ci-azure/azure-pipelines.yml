trigger:
  branches:
    include:
      - master
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  PY_VERSION: 3.8
  PY_ENV_PATH: $(Pipeline.Workspace)/.env
  REINSTALL_DEPS: 'false'

stages:
  - stage: install_deps
    displayName: 'install deps'

    jobs:
      - job: python_deps
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(PY_VERSION)'

          - task: Cache@2
            displayName: Use cached pip dependencies
            inputs:
              key: dev_requirements.txt
              path: $(PY_ENV_PATH)
              cacheHitVar: PIP_DEPS_CACHE_RESTORED

          - script: |
              PIP="pip install -r dev_requirements.txt --target $(PY_ENV_PATH)" 
              echo $PIP
              eval $PIP
            displayName: pip install
            condition: or(eq(variables.CONDA_CACHE_RESTORED, 'false'), eq(variables.REINSTALL_DEPS, 'true'))


  - stage: lint
    displayName: 'lint'
    jobs:
      - job:
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(PY_VERSION)'

          - task: Cache@2
            displayName: Use cached pip dependencies
            inputs:
              key: dev_requirements.txt
              path: $(PY_ENV_PATH)
              cacheHitVar: PIP_DEPS_CACHE_RESTORED

          - script: |
              PIP="pip install -r dev_requirements.txt --target $(PY_ENV_PATH)" 
              echo $PIP
              eval $PIP
            displayName: pip install
            condition: or(eq(variables.CONDA_CACHE_RESTORED, 'false'), eq(variables.REINSTALL_DEPS, 'true'))
          
          - script: |
              echo "##vso[task.prependpath]$(PY_ENV_PATH)/bin"
              echo "##vso[task.setvariable variable=PYTHONPATH;]$(PY_ENV_PATH)"
            displayName: Set PATH, PYTHONPATH

          - script: |
              echo "PATH is:"
              echo $PATH
              echo "PYTHONPATH is:"
              echo $PYTHONPATH
              which mypy
              which flake8
              which bandit
              which pylint
              LS_PYTHONPATH="ls $PYTHONPATH"
              echo $LS_PYTHONPATH
              eval $LS_PYTHONPATH
              echo "-----------"
            displayName: Sanity check

          - script: flake8 . --config=.ini-files/.flake8
            displayName: 'Run flake8'

          - script: mypy app_iqor/ lib_py_utils/py_utils/ --config-file .ini-files/mypy.ini
            displayName: 'Run mypy'

          - script: bandit -r . --configfile .ini-files/.bandit.yml
            displayName: 'Run bandit'

          - script: pylint app_iqor/ lib_py_utils/py_utils/  --rcfile=.ini-files/.pylintrc
            displayName: 'Run pylint'